version: "3.8"
services:
  ddh_backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: poetry run python src/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - media_volume:/app/mediafiles
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - ./envs/.env.dev
    depends_on:
        - ddh_db
        - redis
    networks:
      - ddh_back

  ddh_db:
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./envs/.env.dev
    ports:
      - "5432:5432"
    networks:
      - ddh_back

  redis:
    image: redis:7-alpine
    networks:
      - ddh_back

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: ddh_celery_worker
    command: docker/start-celeryworker.sh
    volumes:
      - .:/app
      - media_volume:/app/mediafiles
    env_file:
      - ./envs/.env.dev
    depends_on:
      - redis
      - ddh_db
    networks:
      - ddh_back

  celery_beat:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: ddh_celery_beat
    command: docker/start-celerybeat.sh
    volumes:
      - .:/app
      - media_volume:/app/mediafiles
    env_file:
      - ./envs/.env.dev
    depends_on:
      - redis
      - ddh_db
    networks:
      - ddh_back

  flower:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: ddh_celery_flower
    command: docker/start-flower.sh
    volumes:
      - .:/app
      - media_volume:/app/mediafiles
    env_file:
      - ./envs/.env.dev
    ports:
      - "5557:5555"
    depends_on:
      - redis
      - ddh_db
    networks:
      - ddh_back

volumes:
  postgres_data:
  media_volume:
  static_volume:

networks:
  ddh_back:
    name: ddh_back